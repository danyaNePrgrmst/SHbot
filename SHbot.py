import telebot
# ‚¨áÔ∏è –ù–û–í–´–ï –ò–ú–ü–û–†–¢–´ –¥–ª—è Webhooks
from flask import Flask, request
import os
import sys

# üîπ –¢–≤–æ–π —Ç–æ–∫–µ–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏. –¢–µ–ø–µ—Ä—å –±–µ—Ä–µ–º –¢–û–ö–ï–ù –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!
# BOT_TOKEN = "8422721937:AAHfWAkaULSbKrHrdsZ9n8gCjfrAfMOrhjc"
# 1. –¢–æ–∫–µ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è Render –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.
BOT_TOKEN = os.environ.get('TELEGRAM_TOKEN') 
if not BOT_TOKEN:
    print("‚ùå –û—à–∏–±–∫–∞: –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è TELEGRAM_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
    sys.exit(1) # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É, –µ—Å–ª–∏ —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω

bot = telebot.TeleBot(BOT_TOKEN)
# 2. –°–æ–∑–¥–∞–µ–º Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
server = Flask(__name__)

# üîπ –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ (ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π Telegram)
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –ü—Ä–∏ –∫–∞–∂–¥–æ–º –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞ (—á—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –Ω–∞ —Ö–æ—Å—Ç–∏–Ω–≥–µ) —ç—Ç–æ—Ç —Å–ø–∏—Å–æ–∫ –±—É–¥–µ—Ç –ø—É—Å—Ç—ã–º.
# –î–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∞–¥–º–∏–Ω–æ–≤ —Ç—Ä–µ–±—É–µ—Ç—Å—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö.
admins = set()

# üîπ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∞–Ω–∫–µ—Ç–∞)
user_data = {}

# üîπ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º
def check_requirements(age, version, participate):
    try:
        age = int(age)
    except ValueError: # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–æ–∑—Ä–∞—Å—Ç - —ç—Ç–æ —á–∏—Å–ª–æ
        return False
    if age < 14:
        return False
    # –ò–∑–±–µ–≥–∞–µ–º —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å—Ç—Ä–æ–∫, –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å .find()
    if "1.21.8" not in version and "1.21.94.01" not in version:
        return False
    if participate.lower() not in ["–¥–∞", "yes", "–∞–≥–∞"]:
        return False
    return True


# üîπ –ö–æ–º–∞–Ω–¥—ã –∏ –ª–æ–≥–∏–∫–∞ –∞–Ω–∫–µ—Ç—ã ‚Äî –í–°–ï –û–°–¢–ê–õ–û–°–¨ –ë–ï–ó –ò–ó–ú–ï–ù–ï–ù–ò–ô!
@bot.message_handler(commands=["start"])
def start(msg):
    bot.send_message(
        msg.chat.id,
        "üëã –ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ–±—ã –ø–æ–ø–∞—Å—Ç—å –≤ —Ö–∞—É—Å, –Ω—É–∂–Ω–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É.\n"
        "‚ö† –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:\n"
        "- –í–µ—Ä—Å–∏—è –∏–≥—Ä—ã: 1.21.8 (Java) –∏–ª–∏ 1.21.94.01 (Bedrock)\n"
        "- –í–æ–∑—Ä–∞—Å—Ç: –Ω–µ –º–ª–∞–¥—à–µ 14 –ª–µ—Ç\n"
        "- –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Å—ä—ë–º–∫–∞—Ö\n\n"
        "–ï—Å–ª–∏ –ø–æ–¥—Ö–æ–¥–∏—à—å ‚Äî –Ω–∞–ø–∏—à–∏ '–∞–Ω–∫–µ—Ç–∞'"
    )

@bot.message_handler(func=lambda m: m.text.lower() == "–∞–Ω–∫–µ—Ç–∞")
def start_form(msg):
    user_data[msg.from_user.id] = {}
    bot.send_message(msg.chat.id, "1Ô∏è‚É£ –í–≤–µ–¥–∏ —Å–≤–æ—ë –∏–º—è:")

@bot.message_handler(func=lambda m: m.from_user.id in user_data)
def process_form(msg):
    user_id = msg.from_user.id
    data = user_data[user_id]
    
    # ... –í–∞—à –∫–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞–Ω–∫–µ—Ç—ã (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ...
    
    if "name" not in data:
        data["name"] = msg.text
        bot.send_message(msg.chat.id, "2Ô∏è‚É£ –£–∫–∞–∂–∏ –≤–æ–∑—Ä–∞—Å—Ç:")
        return

    if "age" not in data:
        data["age"] = msg.text
        bot.send_message(msg.chat.id, "3Ô∏è‚É£ –£–∫–∞–∂–∏ –≤–µ—Ä—Å–∏—é –∏–≥—Ä—ã (1.21.8 –∏–ª–∏ 1.21.94.01):")
        return

    if "version" not in data:
        data["version"] = msg.text
        bot.send_message(msg.chat.id, "4Ô∏è‚É£ Bedrock –∏–ª–∏ Java?")
        return

    if "edition" not in data:
        data["edition"] = msg.text
        bot.send_message(msg.chat.id, "5Ô∏è‚É£ –ë—É–¥–µ—à—å —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Å—ä—ë–º–∫–∞—Ö? (–¥–∞/–Ω–µ—Ç):")
        return

    if "participate" not in data:
        data["participate"] = msg.text
        bot.send_message(msg.chat.id, "6Ô∏è‚É£ –ë—ã–ª –ª–∏ –≤ –¥—Ä—É–≥–∏—Ö —Ö–∞—É—Å–∞—Ö? (–¥–∞/–Ω–µ—Ç):")
        return

    if "other_house" not in data:
        data["other_house"] = msg.text
        bot.send_message(msg.chat.id, "7Ô∏è‚É£ –í–≤–µ–¥–∏ –Ω–∏–∫ –≤ –∏–≥—Ä–µ:")
        return

    if "nickname" not in data:
        data["nickname"] = msg.text

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
        if not check_requirements(
            data["age"], data["version"], data["participate"]
        ):
            bot.send_message(msg.chat.id, "‚ùå –¢—ã –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—à—å –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º. –ò–∑–≤–∏–Ω–∏!")
            del user_data[user_id]
            return

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∞–Ω–∫–µ—Ç—ã
        text = (
            f"üìã –ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞!\n\n"
            f"üë§ –ò–º—è: {data['name']}\n"
            f"üéÇ –í–æ–∑—Ä–∞—Å—Ç: {data['age']}\n"
            f"üéÆ –í–µ—Ä—Å–∏—è: {data['version']}\n"
            f"üß± –ò–∑–¥–∞–Ω–∏–µ: {data['edition']}\n"
            f"üé• –£—á–∞—Å—Ç–∏–µ –≤ —Å—ä—ë–º–∫–∞—Ö: {data['participate']}\n"
            f"üè† –ë—ã–ª –≤ –¥—Ä—É–≥–∏—Ö —Ö–∞—É—Å–∞—Ö: {data['other_house']}\n"
            f"üÜî –ù–∏–∫: {data['nickname']}\n"
            f"üí¨ Telegram: @{msg.from_user.username or '–±–µ–∑ –Ω–∏–∫–∞'}"
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–Ω–∫–µ—Ç—É –≤—Å–µ–º –∞–¥–º–∏–Ω–∞–º
        for admin_id in admins:
            try:
                bot.send_message(admin_id, text)
            except:
                pass

        bot.send_message(msg.chat.id, "‚úÖ –ê–Ω–∫–µ—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –û–∂–∏–¥–∞–π –æ—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏. –∫–∏–¥–∞–π –∑–∞–≤—è–≤–∫—É https://t.me/+scSuo2E3kI8xN2Vi ")
        del user_data[user_id]
        
# ... –í–∞—à –∫–æ–¥ –∫–æ–º–∞–Ω–¥ /admin –∏ /unadmin (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ...

@bot.message_handler(commands=["admin"])
def add_admin(msg):
    if msg.from_user.id not in admins:
        admins.add(msg.from_user.id)
        bot.send_message(msg.chat.id, "‚úÖ –¢—ã –¥–æ–±–∞–≤–ª–µ–Ω –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.")
    else:
        bot.send_message(msg.chat.id, "‚ö† –¢—ã —É–∂–µ –∞–¥–º–∏–Ω.")


@bot.message_handler(commands=["unadmin"])
def remove_admin(msg):
    if msg.from_user.id in admins:
        admins.remove(msg.from_user.id)
        bot.send_message(msg.chat.id, "‚ùé –¢—ã –±–æ–ª—å—à–µ –Ω–µ –∞–¥–º–∏–Ω.")
    else:
        bot.send_message(msg.chat.id, "‚ö† –¢—ã –Ω–µ –±—ã–ª –∞–¥–º–∏–Ω–æ–º.")


# -----------------------------------------------------------
# ‚¨áÔ∏è –ù–û–í–ê–Ø –°–ï–ö–¶–ò–Ø: –û–ë–†–ê–ë–û–¢–ß–ò–ö WEBHOOKS
# -----------------------------------------------------------

# –≠—Ç–æ –æ—Å–Ω–æ–≤–Ω–æ–π –º–∞—Ä—à—Ä—É—Ç, –∫—É–¥–∞ Telegram –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è.
# –ü—É—Ç—å /<BOT_TOKEN> –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.
@server.route('/' + BOT_TOKEN, methods=['POST'])
def get_message():
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–ø—Ä–æ—Å –ø—Ä–∏—à–µ–ª –æ—Ç Telegram –∏ –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
    if request.headers.get('content-type') == 'application/json':
        json_string = request.get_data().decode('utf-8')
        update = telebot.types.Update.de_json(json_string)
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        bot.process_new_updates([update])
        return '', 200 # –í–æ–∑–≤—Ä–∞—â–∞–µ–º 200 OK - —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ
    return 'Bad Request', 403

# -----------------------------------------------------------
# ‚¨áÔ∏è –ù–û–í–ê–Ø –°–ï–ö–¶–ò–Ø: –ó–ê–ü–£–°–ö –°–ï–†–í–ï–†–ê
# -----------------------------------------------------------

if __name__ == "__main__":
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –≤ —Ä–µ–∂–∏–º–µ Webhooks...")
    
    # 3. –ü–æ–ª—É—á–∞–µ–º URL –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ –Ω–∞ Render –∏ –ø–æ—Ä—Ç
    # Render –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –≤–Ω–µ—à–Ω–∏–π hostname (URL) –∏ –ø–æ—Ä—Ç —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    app_url = os.environ.get('RENDER_EXTERNAL_HOSTNAME')
    port = int(os.environ.get('PORT', 5000))
    
    # 4. –£–°–¢–ê–ù–û–í–ö–ê WEBHOOK
    # –°–æ–æ–±—â–∞–µ–º Telegram, –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è: https://<URL_RENDER>/<TOKEN>
    if app_url:
        webhook_url = f"https://{app_url}/{BOT_TOKEN}"
        bot.set_webhook(url=webhook_url)
        print(f"üîó Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞: {webhook_url}")
    else:
        print("‚ùå –û—à–∏–±–∫–∞: –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è RENDER_EXTERNAL_HOSTNAME –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Webhook.")
        
    # 5. –ó–∞–ø—É—Å–∫–∞–µ–º Flask-—Å–µ—Ä–≤–µ—Ä –Ω–∞ –ø–æ—Ä—Ç—É, –∫–æ—Ç–æ—Ä—ã–π –¥–∞–ª Render
    # –≠—Ç–æ –∑–∞–º–µ–Ω–∏–ª–æ bot.polling(non_stop=True)
    server.run(host="0.0.0.0", port=port)
